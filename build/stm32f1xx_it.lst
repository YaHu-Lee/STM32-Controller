ARM GAS  /var/folders/dv/rmwv5dbs4b703h_lvs531f700000gp/T//ccIDlKMJ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32f1xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.NMI_Handler,"ax",%progbits
  20              		.align	2
  21              		.global	NMI_Handler
  22              		.thumb
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB65:
  27              		.file 1 "Src/stm32f1xx_it.c"
   1:Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f1xx_it.c **** /**
   3:Src/stm32f1xx_it.c ****   ******************************************************************************
   4:Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f1xx_it.c ****   ******************************************************************************
   7:Src/stm32f1xx_it.c ****   * @attention
   8:Src/stm32f1xx_it.c ****   *
   9:Src/stm32f1xx_it.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Src/stm32f1xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f1xx_it.c ****   *
  12:Src/stm32f1xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/stm32f1xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Src/stm32f1xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Src/stm32f1xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/stm32f1xx_it.c ****   *
  17:Src/stm32f1xx_it.c ****   ******************************************************************************
  18:Src/stm32f1xx_it.c ****   */
  19:Src/stm32f1xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f1xx_it.c **** 
  21:Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f1xx_it.c **** #include "main.h"
  23:Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  24:Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  26:Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  27:Src/stm32f1xx_it.c **** 
  28:Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  30:Src/stm32f1xx_it.c **** 
  31:Src/stm32f1xx_it.c **** /* USER CODE END TD */
ARM GAS  /var/folders/dv/rmwv5dbs4b703h_lvs531f700000gp/T//ccIDlKMJ.s 			page 2


  32:Src/stm32f1xx_it.c **** 
  33:Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  35:Src/stm32f1xx_it.c **** 
  36:Src/stm32f1xx_it.c **** /* USER CODE END PD */
  37:Src/stm32f1xx_it.c **** 
  38:Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  40:Src/stm32f1xx_it.c **** 
  41:Src/stm32f1xx_it.c **** /* USER CODE END PM */
  42:Src/stm32f1xx_it.c **** 
  43:Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  45:Src/stm32f1xx_it.c **** 
  46:Src/stm32f1xx_it.c **** /* USER CODE END PV */
  47:Src/stm32f1xx_it.c **** 
  48:Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  50:Src/stm32f1xx_it.c **** 
  51:Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  52:Src/stm32f1xx_it.c **** 
  53:Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  55:Src/stm32f1xx_it.c **** 
  56:Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  57:Src/stm32f1xx_it.c **** 
  58:Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Src/stm32f1xx_it.c **** 
  60:Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  61:Src/stm32f1xx_it.c **** 
  62:Src/stm32f1xx_it.c **** /* USER CODE END EV */
  63:Src/stm32f1xx_it.c **** 
  64:Src/stm32f1xx_it.c **** /******************************************************************************/
  65:Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */
  66:Src/stm32f1xx_it.c **** /******************************************************************************/
  67:Src/stm32f1xx_it.c **** /**
  68:Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  69:Src/stm32f1xx_it.c ****   */
  70:Src/stm32f1xx_it.c **** void NMI_Handler(void)
  71:Src/stm32f1xx_it.c **** {
  28              		.loc 1 71 0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.L2:
  35 0000 FEE7     		b	.L2
  36              		.cfi_endproc
  37              	.LFE65:
  39 0002 00BF     		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	2
  41              		.global	HardFault_Handler
  42              		.thumb
  43              		.thumb_func
  45              	HardFault_Handler:
  46              	.LFB66:
ARM GAS  /var/folders/dv/rmwv5dbs4b703h_lvs531f700000gp/T//ccIDlKMJ.s 			page 3


  72:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  73:Src/stm32f1xx_it.c **** 
  74:Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  75:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  76:Src/stm32f1xx_it.c ****   while (1)
  77:Src/stm32f1xx_it.c ****   {
  78:Src/stm32f1xx_it.c ****   }
  79:Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  80:Src/stm32f1xx_it.c **** }
  81:Src/stm32f1xx_it.c **** 
  82:Src/stm32f1xx_it.c **** /**
  83:Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  84:Src/stm32f1xx_it.c ****   */
  85:Src/stm32f1xx_it.c **** void HardFault_Handler(void)
  86:Src/stm32f1xx_it.c **** {
  47              		.loc 1 86 0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.L4:
  54 0000 FEE7     		b	.L4
  55              		.cfi_endproc
  56              	.LFE66:
  58 0002 00BF     		.section	.text.MemManage_Handler,"ax",%progbits
  59              		.align	2
  60              		.global	MemManage_Handler
  61              		.thumb
  62              		.thumb_func
  64              	MemManage_Handler:
  65              	.LFB67:
  87:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  88:Src/stm32f1xx_it.c **** 
  89:Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  90:Src/stm32f1xx_it.c ****   while (1)
  91:Src/stm32f1xx_it.c ****   {
  92:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  93:Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  94:Src/stm32f1xx_it.c ****   }
  95:Src/stm32f1xx_it.c **** }
  96:Src/stm32f1xx_it.c **** 
  97:Src/stm32f1xx_it.c **** /**
  98:Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
  99:Src/stm32f1xx_it.c ****   */
 100:Src/stm32f1xx_it.c **** void MemManage_Handler(void)
 101:Src/stm32f1xx_it.c **** {
  66              		.loc 1 101 0
  67              		.cfi_startproc
  68              		@ Volatile: function does not return.
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              		@ link register save eliminated.
  72              	.L6:
  73 0000 FEE7     		b	.L6
  74              		.cfi_endproc
  75              	.LFE67:
ARM GAS  /var/folders/dv/rmwv5dbs4b703h_lvs531f700000gp/T//ccIDlKMJ.s 			page 4


  77 0002 00BF     		.section	.text.BusFault_Handler,"ax",%progbits
  78              		.align	2
  79              		.global	BusFault_Handler
  80              		.thumb
  81              		.thumb_func
  83              	BusFault_Handler:
  84              	.LFB68:
 102:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 103:Src/stm32f1xx_it.c **** 
 104:Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 105:Src/stm32f1xx_it.c ****   while (1)
 106:Src/stm32f1xx_it.c ****   {
 107:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 108:Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 109:Src/stm32f1xx_it.c ****   }
 110:Src/stm32f1xx_it.c **** }
 111:Src/stm32f1xx_it.c **** 
 112:Src/stm32f1xx_it.c **** /**
 113:Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 114:Src/stm32f1xx_it.c ****   */
 115:Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 116:Src/stm32f1xx_it.c **** {
  85              		.loc 1 116 0
  86              		.cfi_startproc
  87              		@ Volatile: function does not return.
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              		@ link register save eliminated.
  91              	.L8:
  92 0000 FEE7     		b	.L8
  93              		.cfi_endproc
  94              	.LFE68:
  96 0002 00BF     		.section	.text.UsageFault_Handler,"ax",%progbits
  97              		.align	2
  98              		.global	UsageFault_Handler
  99              		.thumb
 100              		.thumb_func
 102              	UsageFault_Handler:
 103              	.LFB69:
 117:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 118:Src/stm32f1xx_it.c **** 
 119:Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 120:Src/stm32f1xx_it.c ****   while (1)
 121:Src/stm32f1xx_it.c ****   {
 122:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 123:Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 124:Src/stm32f1xx_it.c ****   }
 125:Src/stm32f1xx_it.c **** }
 126:Src/stm32f1xx_it.c **** 
 127:Src/stm32f1xx_it.c **** /**
 128:Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 129:Src/stm32f1xx_it.c ****   */
 130:Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 131:Src/stm32f1xx_it.c **** {
 104              		.loc 1 131 0
 105              		.cfi_startproc
 106              		@ Volatile: function does not return.
ARM GAS  /var/folders/dv/rmwv5dbs4b703h_lvs531f700000gp/T//ccIDlKMJ.s 			page 5


 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 110              	.L10:
 111 0000 FEE7     		b	.L10
 112              		.cfi_endproc
 113              	.LFE69:
 115 0002 00BF     		.section	.text.SVC_Handler,"ax",%progbits
 116              		.align	2
 117              		.global	SVC_Handler
 118              		.thumb
 119              		.thumb_func
 121              	SVC_Handler:
 122              	.LFB70:
 132:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 133:Src/stm32f1xx_it.c **** 
 134:Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 135:Src/stm32f1xx_it.c ****   while (1)
 136:Src/stm32f1xx_it.c ****   {
 137:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 138:Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 139:Src/stm32f1xx_it.c ****   }
 140:Src/stm32f1xx_it.c **** }
 141:Src/stm32f1xx_it.c **** 
 142:Src/stm32f1xx_it.c **** /**
 143:Src/stm32f1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 144:Src/stm32f1xx_it.c ****   */
 145:Src/stm32f1xx_it.c **** void SVC_Handler(void)
 146:Src/stm32f1xx_it.c **** {
 123              		.loc 1 146 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 128 0000 7047     		bx	lr
 129              		.cfi_endproc
 130              	.LFE70:
 132 0002 00BF     		.section	.text.DebugMon_Handler,"ax",%progbits
 133              		.align	2
 134              		.global	DebugMon_Handler
 135              		.thumb
 136              		.thumb_func
 138              	DebugMon_Handler:
 139              	.LFB71:
 147:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 148:Src/stm32f1xx_it.c **** 
 149:Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 150:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 151:Src/stm32f1xx_it.c **** 
 152:Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 153:Src/stm32f1xx_it.c **** }
 154:Src/stm32f1xx_it.c **** 
 155:Src/stm32f1xx_it.c **** /**
 156:Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 157:Src/stm32f1xx_it.c ****   */
 158:Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 159:Src/stm32f1xx_it.c **** {
ARM GAS  /var/folders/dv/rmwv5dbs4b703h_lvs531f700000gp/T//ccIDlKMJ.s 			page 6


 140              		.loc 1 159 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 145 0000 7047     		bx	lr
 146              		.cfi_endproc
 147              	.LFE71:
 149 0002 00BF     		.section	.text.PendSV_Handler,"ax",%progbits
 150              		.align	2
 151              		.global	PendSV_Handler
 152              		.thumb
 153              		.thumb_func
 155              	PendSV_Handler:
 156              	.LFB72:
 160:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 161:Src/stm32f1xx_it.c **** 
 162:Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 163:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 164:Src/stm32f1xx_it.c **** 
 165:Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 166:Src/stm32f1xx_it.c **** }
 167:Src/stm32f1xx_it.c **** 
 168:Src/stm32f1xx_it.c **** /**
 169:Src/stm32f1xx_it.c ****   * @brief This function handles Pendable request for system service.
 170:Src/stm32f1xx_it.c ****   */
 171:Src/stm32f1xx_it.c **** void PendSV_Handler(void)
 172:Src/stm32f1xx_it.c **** {
 157              		.loc 1 172 0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161              		@ link register save eliminated.
 162 0000 7047     		bx	lr
 163              		.cfi_endproc
 164              	.LFE72:
 166 0002 00BF     		.section	.text.SysTick_Handler,"ax",%progbits
 167              		.align	2
 168              		.global	SysTick_Handler
 169              		.thumb
 170              		.thumb_func
 172              	SysTick_Handler:
 173              	.LFB73:
 173:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 174:Src/stm32f1xx_it.c **** 
 175:Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 176:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 177:Src/stm32f1xx_it.c **** 
 178:Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 179:Src/stm32f1xx_it.c **** }
 180:Src/stm32f1xx_it.c **** 
 181:Src/stm32f1xx_it.c **** /**
 182:Src/stm32f1xx_it.c ****   * @brief This function handles System tick timer.
 183:Src/stm32f1xx_it.c ****   */
 184:Src/stm32f1xx_it.c **** void SysTick_Handler(void)
 185:Src/stm32f1xx_it.c **** {
 174              		.loc 1 185 0
ARM GAS  /var/folders/dv/rmwv5dbs4b703h_lvs531f700000gp/T//ccIDlKMJ.s 			page 7


 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178              		.loc 1 185 0
 179 0000 08B5     		push	{r3, lr}
 180              	.LCFI0:
 181              		.cfi_def_cfa_offset 8
 182              		.cfi_offset 3, -8
 183              		.cfi_offset 14, -4
 186:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 187:Src/stm32f1xx_it.c **** 
 188:Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 189:Src/stm32f1xx_it.c ****   HAL_IncTick();
 184              		.loc 1 189 0
 185 0002 FFF7FEFF 		bl	HAL_IncTick
 186              	.LVL0:
 187 0006 08BD     		pop	{r3, pc}
 188              		.cfi_endproc
 189              	.LFE73:
 191              		.text
 192              	.Letext0:
 193              		.file 2 "/Users/bytedance/Documents/STM32/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machi
 194              		.file 3 "/Users/bytedance/Documents/STM32/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_
 195              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 196              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /var/folders/dv/rmwv5dbs4b703h_lvs531f700000gp/T//ccIDlKMJ.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_it.c
/var/folders/dv/rmwv5dbs4b703h_lvs531f700000gp/T//ccIDlKMJ.s:20     .text.NMI_Handler:0000000000000000 $t
/var/folders/dv/rmwv5dbs4b703h_lvs531f700000gp/T//ccIDlKMJ.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
/var/folders/dv/rmwv5dbs4b703h_lvs531f700000gp/T//ccIDlKMJ.s:40     .text.HardFault_Handler:0000000000000000 $t
/var/folders/dv/rmwv5dbs4b703h_lvs531f700000gp/T//ccIDlKMJ.s:45     .text.HardFault_Handler:0000000000000000 HardFault_Handler
/var/folders/dv/rmwv5dbs4b703h_lvs531f700000gp/T//ccIDlKMJ.s:59     .text.MemManage_Handler:0000000000000000 $t
/var/folders/dv/rmwv5dbs4b703h_lvs531f700000gp/T//ccIDlKMJ.s:64     .text.MemManage_Handler:0000000000000000 MemManage_Handler
/var/folders/dv/rmwv5dbs4b703h_lvs531f700000gp/T//ccIDlKMJ.s:78     .text.BusFault_Handler:0000000000000000 $t
/var/folders/dv/rmwv5dbs4b703h_lvs531f700000gp/T//ccIDlKMJ.s:83     .text.BusFault_Handler:0000000000000000 BusFault_Handler
/var/folders/dv/rmwv5dbs4b703h_lvs531f700000gp/T//ccIDlKMJ.s:97     .text.UsageFault_Handler:0000000000000000 $t
/var/folders/dv/rmwv5dbs4b703h_lvs531f700000gp/T//ccIDlKMJ.s:102    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
/var/folders/dv/rmwv5dbs4b703h_lvs531f700000gp/T//ccIDlKMJ.s:116    .text.SVC_Handler:0000000000000000 $t
/var/folders/dv/rmwv5dbs4b703h_lvs531f700000gp/T//ccIDlKMJ.s:121    .text.SVC_Handler:0000000000000000 SVC_Handler
/var/folders/dv/rmwv5dbs4b703h_lvs531f700000gp/T//ccIDlKMJ.s:133    .text.DebugMon_Handler:0000000000000000 $t
/var/folders/dv/rmwv5dbs4b703h_lvs531f700000gp/T//ccIDlKMJ.s:138    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
/var/folders/dv/rmwv5dbs4b703h_lvs531f700000gp/T//ccIDlKMJ.s:150    .text.PendSV_Handler:0000000000000000 $t
/var/folders/dv/rmwv5dbs4b703h_lvs531f700000gp/T//ccIDlKMJ.s:155    .text.PendSV_Handler:0000000000000000 PendSV_Handler
/var/folders/dv/rmwv5dbs4b703h_lvs531f700000gp/T//ccIDlKMJ.s:167    .text.SysTick_Handler:0000000000000000 $t
/var/folders/dv/rmwv5dbs4b703h_lvs531f700000gp/T//ccIDlKMJ.s:172    .text.SysTick_Handler:0000000000000000 SysTick_Handler
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
